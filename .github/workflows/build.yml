name: Build Executables and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install requirements
        run: |
          pip install -r requirements.txt pyinstaller

      - name: Run PyInstaller
        run: |
          pyinstaller --name=DRG-Save-Editor --windowed --noconfirm src/main/python/main.py

      - name: Copy required files
        run: |
          copy guids.json dist/DRG-Save-Editor/
          copy editor.ui dist/DRG-Save-Editor/

      - name: Compress files to ZIP
        run: |
          powershell Compress-Archive -Path dist/DRG-Save-Editor/* -DestinationPath dist/DRG-Save-Editor-windows.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: DRG-Save-Editor-windows
          path: dist/DRG-Save-Editor-windows.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install requirements
        run: |
          pip install -r requirements.txt pyinstaller

      - name: Run PyInstaller
        run: |
          pyinstaller --name=DRG-Save-Editor --windowed --noconfirm src/main/python/main.py

      - name: Copy required files
        run: |
          cp guids.json dist/DRG-Save-Editor/
          cp editor.ui dist/DRG-Save-Editor/

      - name: Compress files to tar.gz
        run: |
          tar -czvf dist/DRG-Save-Editor-linux.tar.gz dist/DRG-Save-Editor/*

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: DRG-Save-Editor-linux
          path: dist/DRG-Save-Editor-linux.tar.gz

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Download artifacts
        id: download_artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Get the release tag
        id: get_release_tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_release_tag.outputs.RELEASE_TAG }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ${{ steps.download_artifacts.outputs.download-path }}/*
